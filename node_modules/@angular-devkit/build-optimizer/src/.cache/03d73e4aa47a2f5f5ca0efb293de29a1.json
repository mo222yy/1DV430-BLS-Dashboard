{"remainingRequest":"/home/marre/Skrivbord/Projekt/dashboard/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/marre/Skrivbord/Projekt/dashboard/dashboard/node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","dependencies":[{"path":"/home/marre/Skrivbord/Projekt/dashboard/dashboard/node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","mtime":1527857410123},{"path":"/home/marre/Skrivbord/Projekt/dashboard/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1527857407875},{"path":"/home/marre/Skrivbord/Projekt/dashboard/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1527857406787}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport var ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n",null]}