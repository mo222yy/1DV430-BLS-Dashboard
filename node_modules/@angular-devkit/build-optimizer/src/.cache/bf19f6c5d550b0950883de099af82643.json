{"remainingRequest":"C:\\Martin\\DashBoard1.0\\mo222yy-project\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Martin\\DashBoard1.0\\mo222yy-project\\node_modules\\xmlbuilder\\lib\\index.js","dependencies":[{"path":"C:\\Martin\\DashBoard1.0\\mo222yy-project\\node_modules\\xmlbuilder\\lib\\index.js","mtime":1527750088325},{"path":"C:\\Martin\\DashBoard1.0\\mo222yy-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527750036045},{"path":"C:\\Martin\\DashBoard1.0\\mo222yy-project\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527750016829}],"contextDependencies":[],"result":["// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\r\n\r\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\r\n\r\n  XMLDocument = require('./XMLDocument');\r\n\r\n  XMLDocumentCB = require('./XMLDocumentCB');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  XMLStreamWriter = require('./XMLStreamWriter');\r\n\r\n  module.exports.create = function(name, xmldec, doctype, options) {\r\n    var doc, root;\r\n    if (name == null) {\r\n      throw new Error(\"Root element needs a name\");\r\n    }\r\n    options = assign({}, xmldec, doctype, options);\r\n    doc = new XMLDocument(options);\r\n    root = doc.element(name);\r\n    if (!options.headless) {\r\n      doc.declaration(options);\r\n      if ((options.pubID != null) || (options.sysID != null)) {\r\n        doc.doctype(options);\r\n      }\r\n    }\r\n    return root;\r\n  };\r\n\r\n  module.exports.begin = function(options, onData, onEnd) {\r\n    var ref1;\r\n    if (isFunction(options)) {\r\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\r\n      options = {};\r\n    }\r\n    if (onData) {\r\n      return new XMLDocumentCB(options, onData, onEnd);\r\n    } else {\r\n      return new XMLDocument(options);\r\n    }\r\n  };\r\n\r\n  module.exports.stringWriter = function(options) {\r\n    return new XMLStringWriter(options);\r\n  };\r\n\r\n  module.exports.streamWriter = function(stream, options) {\r\n    return new XMLStreamWriter(stream, options);\r\n  };\r\n\r\n}).call(this);\r\n",null]}